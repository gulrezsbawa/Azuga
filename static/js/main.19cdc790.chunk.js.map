{"version":3,"sources":["components/BooksList.js","components/ContentDisplay.js","components/Progress.js","components/SearchBar.js","components/PasswordCheck.js","components/DisplayMinCharacterRequired.js","components/PasswordCheckList.js","App.js","reportWebVitals.js","index.js"],"names":["BooksList","props","apiResponse","className","id","type","onClick","closeModal","style","width","length","map","item","fetchContent","articleId","title","upvotes","date","colSpan","handlerNewest","handlerTop","ContentDisplay","content","Progress","height","role","SearchBar","authorText","value","onChange","e","setAuthorText","currentTarget","disabled","trim","fetchData","PasswordCheck","password","handerPasswordChange","DisplayMinCharacterRequired","minCharacterRequired","PasswordCheckList","passwordCheckList","index","clsName","passwordCheckListValues","$","require","App","useState","setApiResponse","setContent","setPassword","setMinCharacterRequired","setPasswordCheckListValues","openModal","modelName","show","hide","checkCondition","failedcondition","passwordLength","isLengthCorrect","isUpperCase","test","isLowerCase","isDigitPresent","isSpecialCharacter","passcondition","attr","axios","get","then","res","filteredRes","data","filter","author","toLowerCase","catch","err","console","log","filteredContent","sortedList","sort","a","b","Date","newSortedList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19cdc790.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction BooksList(props) {\r\n  let apiResponse = props.apiResponse;\r\n\r\n  return (\r\n    <div className=\"modal\" id=\"displayAuthorListModal\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          {/* Modal Header */}\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">Books</h4>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              onClick={() => props.closeModal(\"displayAuthorListModal\")}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          {/* Modal body */}\r\n          <div className=\"modal-body\">\r\n            <table className=\"table table-bordered\" style={{ width: \"100%\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Upvotes</th>\r\n                  <th>Dates</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"BookListBody\">\r\n                {apiResponse.length > 0 ? (\r\n                  apiResponse.map((item) => {\r\n                    return (\r\n                      <tr className=\"tdBookList\" key={item.articleId}>\r\n                        <td>\r\n                          <button\r\n                            onClick={() => props.fetchContent(item.articleId)}\r\n                            className=\"btn btn-link\"\r\n                          >\r\n                            {item.title}\r\n                          </button>\r\n                        </td>\r\n                        <td>{item.upvotes}</td>\r\n                        <td>{item.date}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr id=\"noResultTD\">\r\n                    <td colSpan=\"4\" className=\"text-center p-4\">\r\n                      No Results\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Modal footer */}\r\n          <div className=\"modal-footer\">\r\n            {apiResponse.length > 0 ? (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={() => props.handlerNewest()}\r\n                >\r\n                  Newest\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={() => props.handlerTop()}\r\n                >\r\n                  Top\r\n                </button>\r\n              </>\r\n            ) : null}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={() => props.closeModal(\"displayAuthorListModal\")}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BooksList;\r\n","import React from \"react\";\r\n\r\nfunction ContentDisplay(props) {\r\n  let content = props.content;\r\n  return (\r\n    <div className=\"modal\" id=\"displayContentModal\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          {/* Modal Header */}\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">Content</h4>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              onClick={() => props.closeModal(\"displayContentModal\")}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          {/* Modal body */}\r\n          <div className=\"modal-body\">\r\n            <p>{content}</p>\r\n          </div>\r\n          {/* Modal footer */}\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn  btn-sm btn-danger\"\r\n              onClick={() => props.closeModal(\"displayContentModal\")}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentDisplay;\r\n","import React from \"react\";\r\n\r\nfunction Progress() {\r\n  return (\r\n    <div className=\"modal\" id=\"progress\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-body\">\r\n            <div\r\n              className=\"spinner-border\"\r\n              style={{ width: \"6rem\", height: \"6rem\" }}\r\n              role=\"status\"\r\n            >\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Progress;\r\n","import React from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n  let authorText = props.authorText;\r\n  return (\r\n    <div>\r\n      <input\r\n        value={authorText}\r\n        onChange={(e) => props.setAuthorText(e.currentTarget.value)}\r\n      />\r\n      <button\r\n        disabled={authorText.trim() === \"\" || authorText === null}\r\n        onClick={() => props.fetchData()}\r\n        id=\"id_fetchButton\"\r\n        className=\"btn btn-sm btn-info ml-3\"\r\n      >\r\n        Fetch\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nfunction PasswordCheck(props) {\r\n  let password = props.password;\r\n  return (\r\n    <div>\r\n      <input\r\n        value={password}\r\n        type=\"password\"\r\n        onChange={(e) => props.handerPasswordChange(e.currentTarget.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordCheck;\r\n","import React from \"react\";\r\n\r\nfunction DisplayMinCharacterRequired(props) {\r\n  return (\r\n    <div>\r\n      <p>{props.minCharacterRequired}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayMinCharacterRequired;\r\n","import React from \"react\";\r\n\r\nfunction PasswordCheckList(props) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ul_CheckList\">\r\n        {props.passwordCheckList.map((item, index) => {\r\n          let clsName = props.passwordCheckListValues[index] ? \"checked\" : \"\";\r\n          return (\r\n            <li className={clsName} key={index + \"_\" + item}>\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordCheckList;\r\n","import \"./App.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport BooksList from \"./components/BooksList\";\nimport ContentDisplay from \"./components/ContentDisplay\";\nimport Progress from \"./components/Progress\";\nimport SearchBar from \"./components/SearchBar\";\nimport PasswordCheck from \"./components/PasswordCheck\";\nimport DisplayMinCharacterRequired from \"./components/DisplayMinCharacterRequired\";\nimport PasswordCheckList from \"./components/PasswordCheckList\";\nconst $ = require(\"jquery\");\nfunction App() {\n  const [apiResponse, setApiResponse] = useState([]);\n  const [authorText, setAuthorText] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [minCharacterRequired, setMinCharacterRequired] = useState(\"\");\n  const passwordCheckList = [\n    \"Its length is at least 6\",\n    \"It contains at least one digit\",\n    \"It contains at least one lowercase English character.\",\n    \"It contains at least one uppercase English character.\",\n    \"It contains at least one special character. The special characters are: !@#$%^&*()-+\",\n  ];\n  const [passwordCheckListValues, setPasswordCheckListValues] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n  const fetchData = () => {\n    openModal(\"progress\");\n    $(\"#id_fetchButton\").attr(\"disabled\", true);\n    axios\n      .get(\"test.json\")\n      .then((res) => {\n        closeModal(\"progress\");\n        $(\"#id_fetchButton\").attr(\"disabled\", false);\n        let filteredRes = res.data.filter(\n          (item) =>\n            item.author.toLowerCase() === authorText.toLowerCase() &&\n            item.title !== null &&\n            item.title.trim() !== \"\"\n        );\n        setApiResponse(filteredRes);\n        setAuthorText(\"\");\n        openModal(\"displayAuthorListModal\");\n      })\n      .catch((err) => {\n        closeModal(\"progress\");\n        console.log(err);\n      });\n  };\n\n  const fetchContent = (articleId) => {\n    openModal(\"progress\");\n    let filteredContent = apiResponse.filter(\n      (item) => item.articleId === articleId\n    );\n\n    setContent(filteredContent[0].content);\n    closeModal(\"progress\");\n    openModal(\"displayContentModal\");\n  };\n\n  const openModal = (modelName) => {\n    $(\"#\" + modelName).show();\n  };\n\n  const closeModal = (modelName) => {\n    $(\"#\" + modelName).hide();\n  };\n\n  const handlerNewest = () => {\n    let sortedList = apiResponse.sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    });\n    let newSortedList = [...sortedList];\n    setApiResponse(newSortedList);\n  };\n  const handlerTop = () => {\n    let sortedList = apiResponse.sort(function (a, b) {\n      return b.upvotes - a.upvotes;\n    });\n    let newSortedList = [...sortedList];\n    setApiResponse(newSortedList);\n  };\n  const handerPasswordChange = (password) => {\n    setPassword(password);\n    checkCondition(password);\n  };\n  const checkCondition = (password) => {\n    let passcondition = 0;\n    let failedcondition = 0;\n    let minAllowed = 6;\n    let passwordLength = password.length;\n    let regexUppercase = /[A-Z]/; // check if upper case is present\n    let regexLowercase = /[a-z]/; // check if lower case is present\n    let regexDigitcase = /[0-9]/; // check if digit is present\n    let regexSpecialCharacter = /[!@#$%^&*()-+]/; // check if special character is present\n    let isLengthCorrect = password.length >= minAllowed;\n    let isUpperCase = regexUppercase.test(password);\n    let isLowerCase = regexLowercase.test(password);\n    let isDigitPresent = regexDigitcase.test(password);\n    let isSpecialCharacter = regexSpecialCharacter.test(password);\n\n    if (isUpperCase) {\n      passcondition++;\n    } else {\n      failedcondition++;\n    }\n\n    if (isLowerCase) {\n      passcondition++;\n    } else {\n      failedcondition++;\n    }\n    if (isDigitPresent) {\n      passcondition++;\n    } else {\n      failedcondition++;\n    }\n    if (isSpecialCharacter) {\n      passcondition++;\n    } else {\n      failedcondition++;\n    }\n    if (passwordLength === 0) {\n      setMinCharacterRequired(\"\");\n    } else if (passwordLength + failedcondition < minAllowed) {\n      let num = minAllowed - passwordLength;\n      setMinCharacterRequired(\n        \"Additional \" + num + \" more characters required\"\n      );\n    } else if (\n      passwordLength + failedcondition >= minAllowed &&\n      failedcondition !== 0\n    ) {\n      setMinCharacterRequired(\n        \"Additional \" + failedcondition + \" more characters required\"\n      );\n    } else if (isLengthCorrect && failedcondition === 0) {\n      setMinCharacterRequired(\"Your password is strong\");\n    } else {\n      setMinCharacterRequired(\"somethinge went wrong\");\n    }\n\n    setPasswordCheckListValues([\n      isLengthCorrect,\n      isDigitPresent,\n      isLowerCase,\n      isUpperCase,\n      isSpecialCharacter,\n    ]);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"row  text-left\">\n        <div className=\"col-sm-4\">\n          <label id=\"lbl_authorName\">Author Name : </label>\n        </div>\n        <div className=\"col-sm-8\">\n          <SearchBar\n            authorText={authorText}\n            setAuthorText={setAuthorText}\n            fetchData={fetchData}\n          />\n        </div>\n      </div>\n      <div className=\"row mt-3  text-left\">\n        <div className=\"col-sm-4\">\n          <label id=\"lbl_password\">Password : </label>\n        </div>\n        <div className=\"col-sm-8\">\n          <PasswordCheck\n            password={password}\n            handerPasswordChange={handerPasswordChange}\n          />\n        </div>\n      </div>\n      <div className=\"row mt-3 text-left\">\n        <PasswordCheckList\n          passwordCheckList={passwordCheckList}\n          passwordCheckListValues={passwordCheckListValues}\n        />\n      </div>\n      <DisplayMinCharacterRequired\n        minCharacterRequired={minCharacterRequired}\n      />\n      <BooksList\n        apiResponse={apiResponse}\n        closeModal={closeModal}\n        fetchContent={fetchContent}\n        handlerNewest={handlerNewest}\n        handlerTop={handlerTop}\n      />\n      <ContentDisplay content={content} closeModal={closeModal} />\n      <Progress />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}